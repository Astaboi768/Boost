const axios=require("axios");const tinyurl=require("tinyurl");

const API_BASE_URL="https://api-samir.onrender.com";

const geminiModule={config:{name:"gemini",version:"1.0",author:"Samir OE",countDown:5,role:0,category:"ai",},async onStart({message,event,args,commandName}){try{let shortLink;if(event.type==="message_reply"&&["photo","sticker"].includes(event.messageReply.attachments?.[0]?.type)){shortLink=await tinyurl.shorten(event.messageReply.attachments[0].url);}else{const text=args.join(' ');const response0=await axios.get(`${API_BASE_URL}/Gemini?text=${encodeURIComponent(text)}`);if(geminiModule.isValidResponse(response0)){const textContent=response0.data.candidates[0].content.parts[0].text;const ans=`${textContent}`;geminiModule.sendReply(message,event,ans,commandName);return;}}if(!shortLink){console.error("Error: Invalid message or attachment type");return;}const like=`${API_BASE_URL}/telegraph?url=${encodeURIComponent(shortLink)}&senderId=Y=777565`;const response4=await axios.get(like);const link=response4.data.result.link;const text=args.join(' ');const vision=`${API_BASE_URL}/gemini-pro?text=${encodeURIComponent(text)}&url=${encodeURIComponent(link)}`;const response1=await axios.get(vision);geminiModule.sendReply(message,event,response1.data,commandName);}catch(error){console.error("Error in onStart:",error.message);}},onReply:async function({message,event,Reply,args}){try{let{author,commandName}=Reply;if(event.senderID!==author)return;const gif=args.join(' ');const response23=await axios.get(`${API_BASE_URL}/Gemini?text=${encodeURIComponent(gif)}`);if(geminiModule.isValidResponse(response23)){const textContent=response23.data.candidates[0].content.parts[0].text;const wh=`${textContent}`;geminiModule.sendReply(message,event,wh,commandName);}}catch(error){console.error("Error in onReply:",error.message);}},isValidResponse(response){return response.data&&response.data.candidates&&response.data.candidates.length>0;},sendReply(message,event,body,commandName){message.reply({body,},(err,info)=>{global.GoatBot.onReply.set(info.messageID,{commandName,messageID:info.messageID,author:event.senderID,});});},};module.exports=geminiModule;